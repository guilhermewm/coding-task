[{"C:\\projects\\coding-task-frontend-template\\frontend\\src\\serviceWorker.ts":"1","C:\\projects\\coding-task-frontend-template\\frontend\\src\\navigation\\NotFound.tsx":"2","C:\\projects\\coding-task-frontend-template\\frontend\\src\\index.tsx":"3","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\App\\App.tsx":"4","C:\\projects\\coding-task-frontend-template\\frontend\\src\\pages\\Home\\Index.tsx":"5","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Header\\Header.tsx":"6","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CategoryList\\CategoryList.tsx":"7","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Keyword\\Keyword.tsx":"8","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Category\\Category.tsx":"9","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CategoryDetail\\CategoryDetail.tsx":"10","C:\\projects\\coding-task-frontend-template\\frontend\\src\\graphql\\service.ts":"11","C:\\projects\\coding-task-frontend-template\\frontend\\src\\graphql\\config.ts":"12","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Form\\Form.tsx":"13","C:\\projects\\coding-task-frontend-template\\frontend\\src\\service\\category.ts":"14","C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CreateCategory\\CreateCategory.tsx":"15"},{"size":4955,"mtime":1610292313861,"results":"16","hashOfConfig":"17"},{"size":291,"mtime":1610400059527,"results":"18","hashOfConfig":"17"},{"size":406,"mtime":1610293186360,"results":"19","hashOfConfig":"17"},{"size":728,"mtime":1610398012994,"results":"20","hashOfConfig":"17"},{"size":2461,"mtime":1610399012270,"results":"21","hashOfConfig":"17"},{"size":269,"mtime":1610294291154,"results":"22","hashOfConfig":"17"},{"size":1412,"mtime":1610397274585,"results":"23","hashOfConfig":"17"},{"size":378,"mtime":1610391926905,"results":"24","hashOfConfig":"17"},{"size":481,"mtime":1610304579372,"results":"25","hashOfConfig":"17"},{"size":3662,"mtime":1610398713286,"results":"26","hashOfConfig":"17"},{"size":2196,"mtime":1610396244393,"results":"27","hashOfConfig":"17"},{"size":181,"mtime":1610393236380,"results":"28","hashOfConfig":"17"},{"size":784,"mtime":1610398254497,"results":"29","hashOfConfig":"17"},{"size":148,"mtime":1610394921837,"results":"30","hashOfConfig":"17"},{"size":666,"mtime":1610396359400,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jfawpu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\coding-task-frontend-template\\frontend\\src\\serviceWorker.ts",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\navigation\\NotFound.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\index.tsx",[],["64","65"],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\App\\App.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\pages\\Home\\Index.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Header\\Header.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CategoryList\\CategoryList.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Keyword\\Keyword.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Category\\Category.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CategoryDetail\\CategoryDetail.tsx",["66"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport { CategoryDetailProps } from \"./types\";\r\nimport Header from \"../Header/Header\";\r\nimport Keyword from \"../Keyword/Keyword\";\r\nimport './styles.scss';\r\nimport { addKeyword, getCategory, removeCategory, removeKeyword } from \"../../graphql/service\";\r\nimport { Category } from \"../Category/types\";\r\nimport Form from \"../Form/Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CategoryDetail: FC<CategoryDetailProps> = ({ categoryName }) => {\r\n  const [category, setCategory] = useState<Category>({} as Category);\r\n  const [error, setError] = useState<string>('');\r\n  const [success, setSuccess] = useState<string>('');  \r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const fetchData = async () => {\r\n\t\ttry {\r\n      setIsLoading(true);\r\n\t\t\tconst resp = await getCategory(categoryName);\r\n      setCategory(resp.data.getCategory);\r\n\t\t} catch (err) {\r\n      setError(err.toString());\r\n      setSuccess('');\r\n\t\t} finally {\r\n      setIsLoading(false);\r\n    }\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n    fetchData();\r\n\t}, [categoryName]);\r\n\r\n  const addNewKeyword = async (word: string) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await addKeyword(category.name, word);\r\n      setSuccess('Success!');  \r\n      setError('');\r\n      fetchData();  \r\n    } catch(err) {\r\n      setError(err.toString());\r\n      setSuccess('');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const deleteKeyword = async (word: string) => {\r\n    try {\r\n      await removeKeyword(category.name, word);\r\n      setSuccess('Success!');  \r\n      setError(''); \r\n      fetchData();  \r\n    } catch(err) {\r\n      setError(err.toString());\r\n      setSuccess('');\r\n    } \r\n  }\r\n\r\n  const deleteCategory = async () => {\r\n    try {\r\n      await removeCategory(category.name);\r\n      history.replace('/');\r\n      window.location.reload(false);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.toString());\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <section className=\"category-detail\">\r\n        {category?.name && (\r\n          <>\r\n            <Header>\r\n              <h1>{category.name}</h1>\r\n              <span onClick={() => deleteCategory()}>\r\n                <svg className=\"remove\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  viewBox=\"0 0 52 52\"\r\n                >\r\n                  <path d=\"M26 0C11.664 0 0 11.663 0 26s11.664 26 26 26 26-11.663 26-26S40.336 0 26 0zm0 50C12.767 50 2 39.233 2 26S12.767 2 26 2s24 10.767 24 24-10.767 24-24 24z\" />\r\n                  <path d=\"M38.5 25H27V14c0-.553-.448-1-1-1s-1 .447-1 1v11H13.5c-.552 0-1 .447-1 1s.448 1 1 1H25v12c0 .553.448 1 1 1s1-.447 1-1V27h11.5c.552 0 1-.447 1-1s-.448-1-1-1z\" />\r\n                </svg>\r\n              </span>\r\n              \r\n            </Header>\r\n            <div className=\"keywords\">\r\n              {category.keywords.map((keyword, i) => (\r\n                <Keyword key={i} removeKeyword={deleteKeyword}>{keyword}</Keyword>\r\n              ))}\r\n              {!category.keywords.length && (\r\n                <>\r\n                  No data.\r\n                </>\r\n              )}\r\n            </div>          \r\n            <footer>\r\n              <div>\r\n                <Form type={'keyword'} submit={addNewKeyword} error={error} success={success} /> \r\n              </div>              \r\n            </footer>\r\n          </>\r\n        )} \r\n        {isLoading && (\r\n          <>Loading...</>\r\n        )}  \r\n\r\n      </section>      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryDetail;\r\n","C:\\projects\\coding-task-frontend-template\\frontend\\src\\graphql\\service.ts",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\graphql\\config.ts",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\Form\\Form.tsx",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\service\\category.ts",[],"C:\\projects\\coding-task-frontend-template\\frontend\\src\\Components\\CreateCategory\\CreateCategory.tsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":34,"column":5,"nodeType":"73","endLine":34,"endColumn":19,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [categoryName, fetchData]",{"range":"80","text":"81"},[1129,1143],"[categoryName, fetchData]"]